{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shuffle = exports.sortNodes = exports.getElBounds = void 0;\n\nvar no_ref_error_1 = require(\"./no-ref-error\");\n\nvar getElBounds = function (el) {\n  var pageXScroll = window.pageXOffset || document.documentElement.scrollLeft;\n  var pageYScroll = window.pageYOffset || document.documentElement.scrollTop;\n  var rect = el.getBoundingClientRect();\n  return {\n    x: rect.left + pageXScroll,\n    y: rect.top + pageYScroll,\n    w: rect.width\n  };\n};\n\nexports.getElBounds = getElBounds;\n\nfunction sortNodes(a, b) {\n  if (!(a instanceof Element)) {\n    throw new no_ref_error_1.NoRefError();\n  }\n\n  if (a === b) return 0; // eslint-disable-next-line no-bitwise\n\n  if (a.compareDocumentPosition(b) & 2) {\n    return 1;\n  }\n\n  return -1;\n}\n\nexports.sortNodes = sortNodes;\n\nfunction shuffle(array) {\n  var result = __spread(array);\n\n  var currentIndex = result.length;\n  var temp;\n  var randomIndex;\n\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temp = result[currentIndex]; // eslint-disable-next-line no-param-reassign\n\n    result[currentIndex] = result[randomIndex]; // eslint-disable-next-line no-param-reassign\n\n    result[randomIndex] = temp;\n  }\n\n  return result;\n}\n\nexports.shuffle = shuffle;","map":null,"metadata":{},"sourceType":"script"}